

provider "aws" {
  region     = "us-east-1"
  access_key = "AKIAZTZLUTMMINDTFYEA"
  secret_key = "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"
}


# for launching ec2 instance 

resource "aws_instance" "pm" {

        ami = "ami-0574da719dca65348"
        instance_type = "t2.micro"
        key_name = "project"
        security_groups = ["sg-0051cfab352b837e4"]
        subnet_id = aws_subnet.subnet-1.id
        tags = {
        Name: "ec2-tf_vpc"
    }
}



# creating vpc

resource "aws_vpc" "main" {
  cidr_block       = "10.0.0.0/22"
  instance_tenancy = "default"

  tags = {
    Name = "tf-vpc"
  }
}


# creating subnet

resource "aws_subnet" "subnet-1" {
  vpc_id     = aws_vpc.main.id
  cidr_block = "10.0.1.0/24"

  tags = {
    Name = "tf-subnet-1"
  }
}


# internet gateway :

resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.main.id

  tags = {
    Name = "tf-igw"
  }
}



# route table

resource "aws_route_table" "example" {
  vpc_id = aws_vpc.main.id
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.gw.id
    }
}


resource "aws_route_table_association" "pm1" {
subnet_id = aws_subnet.subnet-1.id
route_table_id = aws_route_table.example.id
}


# security group:

resource "aws_security_group" "new-sg" {
  name        = "terraform-sg"
  description = "Allow TLS inbound traffic"
  vpc_id      = aws_vpc.main.id

  ingress {                                                         # ingress - means inbound rule
    description      = "TLS from VPC"
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
  }

  egress {                                                          # egress - means outbound rule
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
  }

}


